@page
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Mvc.RazorPages
@using Octokit
@using Octokit.Internal
@model ProfileModel


@section navHeader
{
    <a class="text-secondary nav-link" asp-page="index"> Home </a>
}

@section NavContent
{
    @if (User.Identity.IsAuthenticated)
    {
        <div class="nav nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">
            <a class="nav-link active" id="v-pills-repositories-tab" data-toggle="pill" href="#v-pills-repositories" role="tab" aria-controls="v-pills-repositories" aria-selected="true">Repositories</a>
            <a class="nav-link" id="v-pills-starred-tab" data-toggle="pill" href="#v-pills-starred" role="tab" aria-controls="v-pills-starred" aria-selected="false">Stared</a>
            <a class="nav-link" id="v-pills-followers-tab" data-toggle="pill" href="#v-pills-followers" role="tab" aria-controls="v-pills-followers" aria-selected="false">Followers</a>
            <a class="nav-link" id="v-pills-following-tab" data-toggle="pill" href="#v-pills-following" role="tab" aria-controls="v-pills-following" aria-selected="false">Following</a>
        </div>
    }
}

@* TODO: Make list paged if there are too many item  *@
@if (User.Identity.IsAuthenticated)
{
    <div class="tab-content mt-md-5" id="v-pills-tabContent">
        <div class="tab-pane fade active show" id="v-pills-repositories" role="tabpanel" aria-labelledby="v-pills-repositories-tab">
            <ul class="list-group align-items-center">

                @if (Model.Repositories.Count() == 0)
                {
                    <span> You have no repositories</span>
                }
                else
                {
                    @foreach (var rep in Model.Repositories)
                    {
                        <li class="list-group-item d-flex justify-content-between w-50">
                            <a href="@rep.HtmlUrl"> @rep.FullName</a>
                            <svg aria-label="Repository" class="octicon octicon-repo flex-shrink-0" viewBox="0 0 16 16" version="1.1" width="16" height="16" role="img">
                                <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
                            </svg>
                        </li>
                    }
                }
            </ul>
        </div>
        <div class="tab-pane fade" id="v-pills-starred" role="tabpanel" aria-labelledby="v-pills-starred-tab">
            <ul class="list-group align-items-center">

                @if (Model.Repositories.Count() == 0)
                {
                    <span> You have no repositories</span>
                }
                else
                {
                    @foreach (var rep in Model.StarredRepos)
                    {
                        <li class="list-group-item d-flex justify-content-between w-50">
                            <a href="@rep.HtmlUrl"> @rep.FullName</a>
                            <svg aria-label="Repository" class="octicon octicon-repo flex-shrink-0" viewBox="0 0 16 16" version="1.1" width="16" height="16" role="img">
                                <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
                            </svg>
                        </li>
                    }
                }
            </ul>

        </div>
        <div class="tab-pane fade" id="v-pills-followers" role="tabpanel" aria-labelledby="v-pills-followers-tab">
            @if (Model.Followers.Count() == 0)
            {
                <span> You have no Followers</span>
            }
            else
            {
                @foreach (var user in Model.Followers)
                {
                    <li class="list-group-item d-flex justify-content-between w-50">
                        <a href="@user.HtmlUrl"> @user.Name</a>
                    </li>
                }
            }
        </div>

        <div class="tab-pane fade" id="v-pills-following" role="tabpanel" aria-labelledby="v-pills-following-tab">
            @if (Model.Following.Count() == 0)
            {
                <span> You have no Following</span>
            }
            else
            {
                @foreach (var user in Model.Following)
                {
                    <li class="list-group-item d-flex justify-content-between w-50">
                        <a href="@user.HtmlUrl"> @user.Name</a>
                    </li>
                }
            }
        </div>
    </div>
}

@functions
{
    public class ProfileModel : PageModel
    {
        public IReadOnlyList<Repository> Repositories { get; set; }
        public IReadOnlyList<Repository> StarredRepos { get; set; }
        public IReadOnlyList<User> Followers { get; set; }
        public IReadOnlyList<User> Following { get; set; }

        public async Task OnGetAsync()
        {
            if (User.Identity.IsAuthenticated)
            {
                var accessToken = await HttpContext.GetTokenAsync("access_token");

                var github = new GitHubClient(new ProductHeaderValue("AspNetCoreGitHubAuth"),
                    new InMemoryCredentialStore(new Credentials(accessToken)));

                Repositories = await github.Repository.GetAllForCurrent();
                StarredRepos = await github.Activity.Starring.GetAllForCurrent();
                Followers = await github.User.Followers.GetAllForCurrent();
                Following = await github.User.Followers.GetAllFollowingForCurrent();
            }
        }
    }

}